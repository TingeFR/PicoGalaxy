version: "3"

services:

  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"
    restart: always
    command:
      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.super.acme.email=qpicault@gmail.com"
      - "--certificatesresolvers.super.acme.storage=/etc/traefik/acme/acme.json"
      - "--certificatesresolvers.super.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.super.acme.dnschallenge=true"
      - "--certificatesresolvers.super.acme.dnschallenge.provider=route53"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./acme.json:/etc/traefik/acme/acme.json"
    environment:
      - AWS_ACCESS_KEY_ID={{ aws_access_key_id }}
      - AWS_SECRET_ACCESS_KEY={{ aws_secret_access_key }}
      - AWS_REGION={{ aws_region }}

  frontend:
    image: nginx
    container_name: "{{ frontend_name }}"
    restart: always
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.{{ project_name }}.rule=Host(`{{ host_name }}`)"
      - "traefik.http.routers.{{ project_name }}.tls=true"
      - "traefik.http.routers.{{ project_name }}.tls.certresolver=super"
      - "traefik.http.routers.{{ project_name }}.tls.domains[0].main={{ host_name }}"
      - "traefik.http.services.{{ project_name }}.loadbalancer.server.port=80"

  api:
    image: "{{ build_image }}:{{ build_version }}"
    container_name: "{{ api_name }}"
    restart: always
    environment:
      - AWS_ACCESS_KEY_ID={{ aws_access_key_id }}
      - AWS_SECRET_ACCESS_KEY={{ aws_secret_access_key }}
      - AWS_REGION={{ aws_region }}
      - JWT_SECRET={{ jwt_secret }}
      - NOTION_TOKEN={{ notion_token }}
    labels:
      - "traefik.enable=false"

  postgres:
    image: postgres:12.2-alpine
    container_name: "postgres"
    restart: always
    volumes:
      - ./pgdata:/var/lib/pgsql/data
    environment:
      - PGDATA=/var/lib/pgsql/data
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=picogalaxy
    labels:
      - "traefik.enable=false"
